https://e2e.ti.com/support/processors-group/processors/f/processors-forum/1566101/sk-am62a-lp-v4l2_decode-vidioc_qbuf-failed



https://github.com/TexasInstruments/edgeai-tiovx-apps

###########################    跑不起来的

root@am62axx-evm:~#  cd /opt/edgeai-tiovx-apps/
root@am62axx-evm:/opt/edgeai-tiovx-apps# ./bin/Release/edgeai-tiovx-apps-main configs/linux/object_detection.yaml
APP: Init ... !!!
   164.707108 s: MEM: Init ... !!!
   164.707212 s: MEM: Initialized DMA HEAP (fd=5) !!!
   164.707453 s: MEM: Init ... Done !!!
   164.707475 s: IPC: Init ... !!!
   164.724360 s: IPC: Init ... Done !!!
REMOTE_SERVICE: Init ... !!!
REMOTE_SERVICE: Init ... Done !!!
   164.734009 s: GTC Frequency = 200 MHz
APP: Init ... Done !!!
   164.738384 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_ERROR
   164.738432 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_WARNING
   164.738443 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_INFO
   164.740719 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-0
   164.740900 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-1
   164.741012 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-2
   164.741137 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-3
   164.741153 s:  VX_ZONE_INFO: [tivxInitLocal:126] Initialization Done !!!
   164.741169 s:  VX_ZONE_INFO: Globally Disabled VX_ZONE_INFO
Input #0, h264, from '/opt/edgeai-test-data/videos/video0_1280_768.h264':
  Duration: N/A, bitrate: N/A
  Stream #0:0: Video: h264 (High), yuv420p(progressive), 1280x768, 25 fps, 60 tbr, 1200k tbn
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
[TIOVX_MODULES][ERROR] 519: v4l2_decode_enqueue_buf: [V4L2_DECODE] VIDIOC_QBUF failed
^C[TIOVX_MODULES][ERROR] 546: v4l2_decode_dqueue_buf: [V4L2_DECODE[  164.502886] kauditd_printk_skb: 5 callbacks suppressed
] POLL failed
[  164.502898] audit: type=1701 audit(172.032:18): auid=4294967295 uid=0 gid=0 ses=4294967295 subj=kernel pid=630 comm="edgeai-tiovx-ap" exe="/opt/edgeai-tiovx-apps/bin/Release/edgeai-tiovx-apps-main" sig=11 res=1
[  164.547521] audit: type=1334 audit(172.072:19): prog-id=19 op=LOAD
[  164.553787] audit: type=1334 audit(172.080:20): prog-id=20 op=LOAD
[  164.560013] audit: type=1334 audit(172.084:21): prog-id=21 op=LOAD
gSegmentation fault (core dumped)
root@am62axx-evm:/opt/edgeai-tiovx-apps# g[  165.884608] audit: type=1334 audit(173.412:22): prog-id=21 op=UNLOAD
[  165.891003] audit: type=1334 audit(173.412:23): prog-id=20 op=UNLOAD
[  165.897415] audit: type=1334 audit(173.412:24): prog-id=19 op=UNLOAD
root@am62axx-evm:/opt/edgeai-tiovx-apps#
root@am62axx-evm:/opt/edgeai-tiovx-apps# grep -H . /sys/class/video4linux/video
video0/ video1/ video2/
root@am62axx-evm:/opt/edgeai-tiovx-apps# grep -H . /sys/class/video4linux/video*/name
/sys/class/video4linux/video0/name:e5010
/sys/class/video4linux/video1/name:C&M Wave5 VPU decoder
/sys/class/video4linux/video2/name:C&M Wave5 VPU encoder


####################################   能跑起来的
root@am62axx-evm:~# grep -H . /sys/class/video4linux/video*/name
/sys/class/video4linux/video0/name:C&M Wave5 VPU decoder
/sys/class/video4linux/video1/name:C&M Wave5 VPU encoder
/sys/class/video4linux/video2/name:e5010
root@am62axx-evm:~# cd /opt/edgeai-tiovx-apps/
root@am62axx-evm:/opt/edgeai-tiovx-apps# ./bin/Release/edgeai-tiovx-apps-main configs/linux/object_detection.yaml
APP: Init ... !!!
   438.579871 s: MEM: Init ... !!!
   438.579972 s: MEM: Initialized DMA HEAP (fd=5) !!!
   438.580212 s: MEM: Init ... Done !!!
   438.580234 s: IPC: Init ... !!!
   438.597354 s: IPC: Init ... Done !!!
REMOTE_SERVICE: Init ... !!!
REMOTE_SERVICE: Init ... Done !!!
   438.608184 s: GTC Frequency = 200 MHz
APP: Init ... Done !!!
   438.612462 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_ERROR
   438.612497 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_WARNING
   438.612508 s:  VX_ZONE_INFO: Globally Enabled VX_ZONE_INFO
   438.614832 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-0
   438.614992 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-1
   438.615118 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-2
   438.615249 s:  VX_ZONE_INFO: [tivxPlatformCreateTargetId:134] Added target MPU-3
   438.615267 s:  VX_ZONE_INFO: [tivxInitLocal:126] Initialization Done !!!
   438.615283 s:  VX_ZONE_INFO: Globally Disabled VX_ZONE_INFO
Input #0, h264, from '/opt/edgeai-test-data/videos/video0_1280_768.h264':
  Duration: N/A, bitrate: N/A
  Stream #0:0: Video: h264 (High), yuv420p(progressive), 1280x768, 25 fps, 60 tbr, 1200k tbn
^Z
[1]+  Stopped(SIGTSTP)        ./bin/Release/edgeai-tiovx-apps-main configs/linux/object_detection.yaml
root@am62axx-evm:/opt/edgeai-tiovx-apps#


############### 修改的yaml
root@am62axx-evm:/opt/edgeai-tiovx-apps# vi configs/linux/object_detection.yaml
title: Object Detection
inputs:
    input0:
        source: VIDEO
        width: 1280
        height: 768
        device: /dev/video1
        video_path: /opt/edgeai-test-data/videos/video0_1280_768.h264
models:
    model0:
        model_path: /opt/model_zoo/TFL-OD-2020-ssdLite-mobDet-DSP-coco-320x320
        viz-threshold: 0.6
    model1:
        model_path: /opt/model_zoo/ONR-OD-8200-yolox-nano-lite-mmdet-coco-416x416
        viz-threshold: 0.6
outputs:
    output0:
        sink: LINUX_DISPLAY
        width: 1920
        height: 1080
    output1:
        sink: H264_ENCODE
        width: 1920
        height: 1088
        output_path: /opt/edgeai-test-data/output/output_video0.h264
    output2:
        sink: IMG_DIR
        width: 1920
        height: 1080
        output_path: /opt/edgeai-test-data/output/
flows:
    flow0:
        pipeline: [input0,model1,output0]
        mosaic:
            - [320,150,1280,720]


################## 报错
terminate called after throwing an instance of '[  107.322530] kauditd_printk_skb: 5 callbacks suppressed
YAML::ParserException'
  what():  yaml-cpp: error at line 7, co[  107.322540] audit: type=1701 audit(114.736:18): auid=4294967295 uid=0 gid=0 ses=4294967295 subj=kernel pid=630 comm="edgeai-tiovx-ap" exe="/opt/edgeai-tiovx-apps/bin/Release/edgeai-tiovx-apps-main" sig=6 res=1
lumn 1: illegal tab when looking for indentation
[  107.357472] audit: type=1334 audit(114.772:19): prog-id=19 op=LOAD
[  107.364375] audit: type=1334 audit(114.776:20): prog-id=20 op=LOAD
[  107.370609] audit: type=1334 audit(114.784:21): prog-id=21 op=LOAD
Aborted (core dumped)
root@am62axx-evm:/opt/edgeai-tiovx-apps# [  108.172592] audit: type=1334 audit(115.588:22): prog-id=21 op=UNLOAD
[  108.178982] audit: type=1334 audit(115.588:23): prog-id=20 op=UNLOAD
[  108.185348] audit: type=1334 audit(115.588:24): prog-id=19 op=UNLOAD
^C


##### 解析
int32_t parse_input_node(InputInfo *input_info, const YAML::Node &input_node)
{
    const std::string source = input_node["source"].as<std::string>();

    if("RTOS_CAM" == source)
    {
        input_info->source = RTOS_CAM;
    }
    else if("LINUX_CAM" == source)
    {
        input_info->source = LINUX_CAM;
    }
    else if("VIDEO" == source)
    {
        input_info->source = VIDEO;
    }
    else if("RAW_IMG" == source)
    {
        input_info->source = RAW_IMG;
    }
    else
    {
        TIOVX_APPS_ERROR("Invalid source '%s' specified.\n", source.c_str());
        return -1;
    }

    sprintf(input_info->source_name, source.data());

    input_info->width = input_node["width"].as<uint32_t>();
    input_info->height = input_node["height"].as<uint32_t>();

    /* Set default values. */
    input_info->sensor_name[0] = '\0';
    input_info->channel_mask = 0;
    input_info->device[0] = '\0';
    input_info->subdev[0] = '\0';
    input_info->format[0] = '\0';
    input_info->loop = true;
    input_info->framerate = 1.0;
    input_info->num_raw_img = 0;
    input_info->ldc_enabled = false;
    input_info->num_channels = 1;

    /* Parse necessary information for RTOS_CAM. */
    if (input_info->source == RTOS_CAM)
    {
        /* Parse sensor-name. */
        if (input_node["sensor-name"])
        {
            sprintf(input_info->sensor_name,
                    input_node["sensor-name"].as<std::string>().data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify sensor-name for %s.\n",
                   input_info->name);
            return -1;
        }

        /* Parse channel-mask. */
        if (input_node["channel-mask"])
        {
            const std::string channel_mask_str = input_node["channel-mask"].as<std::string>();
            uint32_t channel_mask = std::stoi(channel_mask_str, 0, 2);

            input_info->channel_mask = channel_mask;
            input_info->num_channels = 0;

            while(channel_mask > 0)
            {
                if(channel_mask & 0x1)
                {
                    input_info->num_channels++;
                }
                channel_mask = channel_mask >> 1;
            }
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify channel-mask for %s.\n",
                   input_info->name);
            return -1;
        }
    }

    else if (input_info->source == LINUX_CAM)
    {
        /* Parse sensor-name. */
        if (input_node["sensor-name"])
        {
            sprintf(input_info->sensor_name,
                    input_node["sensor-name"].as<std::string>().data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify sensor-name for %s.\n",
                input_info->name);
            return -1;
        }

        /* Parse device. */
        if (input_node["device"])
        {
            sprintf(input_info->device,
                    input_node["device"].as<std::string>().data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify device for %s.\n",
                    input_info->name);
            return -1;
        }

        /* Parse subdev. */
        if (input_node["subdev"])
        {
            sprintf(input_info->subdev,
                    input_node["subdev"].as<std::string>().data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify subdev for %s.\n",
                    input_info->name);
            return -1;
        }
    }

    else if (input_info->source == VIDEO)
    {
        /* Get video path */
        if (input_node["video_path"])
        {
            std::string video_path = input_node["video_path"].as<std::string>();
            if (!std::filesystem::exists(video_path))
            {
                TIOVX_APPS_ERROR("%s does not exist.\n", video_path.c_str());
                return -1;
            }

            sprintf(input_info->video_path, video_path.data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify video_path for %s.\n",
                    input_info->name);
            return -1;
        }
    }

    else if (input_info->source == RAW_IMG)
    {

        if (input_node["framerate"])
        {
            input_info->framerate = input_node["framerate"].as<float>();
        }

        /* Get images */
        if (input_node["image_path"])
        {
            std::string image_path = input_node["image_path"].as<std::string>();
            if (!std::filesystem::exists(image_path))
            {
                TIOVX_APPS_ERROR("%s does not exist.\n", image_path.c_str());
                return -1;
            }

            if(std::filesystem::is_directory(image_path))
            {
                for(const auto &filename : std::filesystem::directory_iterator(image_path))
                {
                    std::string path(filename.path());
                    sprintf(input_info->raw_img_paths[input_info->num_raw_img],
                            path.data());
                    input_info->num_raw_img++;
                }

                char temp[MAX_CHAR_ARRAY_SIZE];
                for(uint32_t i = 1; i < input_info->num_raw_img; i++)
                {
                    for(uint32_t j = 0; j < input_info->num_raw_img-i; j++)
                    {
                        if(strcmp(input_info->raw_img_paths[j],input_info->raw_img_paths[j+1]) > 0)
                        {
                            strcpy(temp, input_info->raw_img_paths[j]);
                            strcpy(input_info->raw_img_paths[j], input_info->raw_img_paths[j+1]);
                            strcpy(input_info->raw_img_paths[j+1], temp);
                        }
                    }
                }
            }
            else
            {
                sprintf(input_info->raw_img_paths[0], image_path.data());
                input_info->num_raw_img = 1;
            }
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify image_path for %s.\n",
                    input_info->name);
            return -1;
        }

        /* Parse format. */
        if (input_node["format"])
        {
            std::string format = input_node["format"].as<std::string>();
            transform(format.begin(), format.end(), format.begin(), ::toupper);
            sprintf(input_info->format,format.data());
        }
        else
        {
            TIOVX_APPS_ERROR("Please specify format for %s.\n",
                    input_info->name);
            return -1;
        }
    }

    /* Parse ldc */
    if (input_node["ldc"])
    {
        input_info->ldc_enabled = input_node["ldc"].as<bool>();
    }

    /* Parse loop. */
    if (input_node["loop"])
    {
        input_info->loop = input_node["loop"].as<bool>();
    }

    return 0;
}


##############
root@am62axx-evm:/opt/edgeai-tiovx-apps# mount --bind /dev/video1
mount: /dev/video1: mount failed: Invalid argument.
root@am62axx-evm:/opt/edgeai-tiovx-apps# mount -bind /dev/video1
mount: invalid option -- 'b'
Try 'mount --help' for more information.
root@am62axx-evm:/opt/edgeai-tiovx-apps# ls /dev/video*
/dev/video0  /dev/video1  /dev/video2
root@am62axx-evm:/opt/edgeai-tiovx-apps# mount -o -bind /dev/video1 /dev/video0
mount: /dev/video0: /dev/video1 is not a block device.
       dmesg(1) may have more information after failed mount system call.

